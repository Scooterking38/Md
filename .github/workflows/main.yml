name: Deep Recon

on:
  workflow_dispatch:

env:
  TARGET_DOMAIN: ${{ secrets.TARGET_DOMAIN }}

jobs:
  recon:
    runs-on: ubuntu-latest
    timeout-minutes: 300  # 5 hours, safe under 6h limit
    continue-on-error: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          set -e
          sudo apt update || echo "apt update failed, continuing..."
          sudo apt install -y python3-pip git nmap perl wget || echo "apt install failed, continuing..."
          pip3 install pipx || echo "pipx install failed, continuing..."
          pipx ensurepath || echo "pipx ensurepath failed, continuing..."

          pipx install bbot || echo "bbot install failed, continuing..."
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest || echo "httpx install failed, continuing..."
          go install github.com/projectdiscovery/katana/cmd/katana@latest || echo "katana install failed, continuing..."

          git clone https://github.com/FortyNorthSecurity/EyeWitness.git || echo "EyeWitness clone failed, continuing..."
          cd EyeWitness || exit 0
          chmod +x setup.sh || echo "chmod on setup.sh failed, continuing..."
          sudo ./setup.sh || echo "EyeWitness setup failed, continuing..."
          cd ..

          go install github.com/LukaSikic/subzy@latest || echo "subzy install failed, continuing..."

          git clone https://github.com/devanshbatham/ParamSpider.git || echo "ParamSpider clone failed, continuing..."
          cd ParamSpider || exit 0
          pip install -r requirements.txt || echo "ParamSpider requirements install failed, continuing..."
          cd ..

          go install github.com/tomnomnom/waybackurls@latest || echo "waybackurls install failed, continuing..."
          go install github.com/lc/gau/v2/cmd/gau@latest || echo "gau install failed, continuing..."

      - name: Subdomain Enumeration with BBOT
        continue-on-error: true
        run: |
          bbot -d $TARGET_DOMAIN -o subdomains.txt || echo "BBOT failed!"

      - name: Check Alive Subdomains with HTTPX
        continue-on-error: true
        run: |
          cat subdomains.txt | httpx -silent -o alive_subdomains.txt || echo "HTTPX failed!"

      - name: Crawl Alive Subdomains with Katana
        continue-on-error: true
        run: |
          katana -list alive_subdomains.txt -o endpoints.txt || echo "Katana failed!"

      - name: Capture Screenshots with EyeWitness
        continue-on-error: true
        run: |
          cd EyeWitness || exit 0
          ./EyeWitness.py --web -f ../alive_subdomains.txt --threads 5 -d ../screenshots/ || echo "EyeWitness failed!"
          cd ..

      - name: Detect Subdomain Takeovers with Subzy
        continue-on-error: true
        run: |
          subzy run --targets alive_subdomains.txt > subzy_results.txt || echo "Subzy failed!"

      - name: Discover Parameters with ParamSpider
        continue-on-error: true
        run: |
          cd ParamSpider || exit 0
          python3 paramspider.py -d $TARGET_DOMAIN > ../paramspider_results.txt || echo "ParamSpider failed!"
          cd ..

      - name: Gather URLs with WaybackURLs and GAU
        continue-on-error: true
        run: |
          cat alive_subdomains.txt | waybackurls > waybackurls.txt || echo "WaybackURLs failed!"
          cat alive_subdomains.txt | gau > gau.txt || echo "GAU failed!"
          sort -u waybackurls.txt gau.txt > urls.txt || echo "Sorting URLs failed!"

      - name: Upload Recon Results
        uses: actions/upload-artifact@v4
        with:
          name: recon-results
          path: |
            subdomains.txt
            alive_subdomains.txt
            endpoints.txt
            screenshots/
            subzy_results.txt
            paramspider_results.txt
            urls.txt
